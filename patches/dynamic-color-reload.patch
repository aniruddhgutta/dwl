From 4e35a0b47213b150450572bf36f262b533d3bb8f Mon Sep 17 00:00:00 2001
From: aniruddhgutta <aniruddhgutta@disroot.org>
Date: Fri, 26 Sep 2025 19:38:39 +0530
Subject: [PATCH] Support runtime color reloading

---
 config.def.h |  2 ++
 dwl.c        | 25 +++++++++++++++++++++++++
 2 files changed, 27 insertions(+)

diff --git a/config.def.h b/config.def.h
index 95c2afa..f71623a 100644
--- a/config.def.h
+++ b/config.def.h
@@ -7,6 +7,7 @@
 static const int sloppyfocus               = 1;  /* focus follows mouse */
 static const int bypass_surface_visibility = 0;  /* 1 means idle inhibitors will disable idle tracking even if it's surface isn't visible  */
 static const unsigned int borderpx         = 1;  /* border pixel of windows */
+static const char *colors_dir              = {"/path/to/colors"}; /* path to color definitions */
 static const float rootcolor[]             = COLOR(0x222222ff);
 static const float bordercolor[]           = COLOR(0x444444ff);
 static const float focuscolor[]            = COLOR(0x005577ff);
@@ -127,6 +128,7 @@ static const Key keys[] = {
 	/* modifier                  key                 function        argument */
 	{ MODKEY,                    XKB_KEY_p,          spawn,          {.v = menucmd} },
 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_Return,     spawn,          {.v = termcmd} },
+    { MODKEY,                    XKB_KEY_n,          reload_colors,  {0} },
 	{ MODKEY,                    XKB_KEY_j,          focusstack,     {.i = +1} },
 	{ MODKEY,                    XKB_KEY_k,          focusstack,     {.i = -1} },
 	{ MODKEY,                    XKB_KEY_i,          incnmaster,     {.i = +1} },
diff --git a/dwl.c b/dwl.c
index 12f441e..02c4e7e 100644
--- a/dwl.c
+++ b/dwl.c
@@ -313,6 +313,7 @@ static void pointerfocus(Client *c, struct wlr_surface *surface,
 static void printstatus(void);
 static void powermgrsetmode(struct wl_listener *listener, void *data);
 static void quit(const Arg *arg);
+static void reload_colors(const Arg *arg);
 static void rendermon(struct wl_listener *listener, void *data);
 static void requestdecorationmode(struct wl_listener *listener, void *data);
 static void requeststartdrag(struct wl_listener *listener, void *data);
@@ -2146,6 +2147,29 @@ quit(const Arg *arg)
 	wl_display_terminate(dpy);
 }
 
+void
+reload_colors(const Arg *arg)
+{
+    FILE *f = fopen(colors_dir, "r");
+    if (!f) {
+        return;
+    }
+
+    for (int i = 0; i < (int)LENGTH(colors); i++) {
+        unsigned int fg, bg, border;
+        if (fscanf(f, "%x %x %x", &fg, &bg, &border) != 3) {
+            break;
+        }
+        colors[i][ColFg] = fg;
+        colors[i][ColBg] = bg;
+        colors[i][ColBorder] = border;
+    }
+
+    fclose(f);
+    drawbars();
+}
+
+
 void
 rendermon(struct wl_listener *listener, void *data)
 {
@@ -3205,6 +3229,7 @@ main(int argc, char *argv[])
 	if (!getenv("XDG_RUNTIME_DIR"))
 		die("XDG_RUNTIME_DIR must be set");
 	setup();
+    reload_colors(0);
 	run(startup_cmd);
 	cleanup();
 	return EXIT_SUCCESS;
-- 
2.51.0

